name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      tidb_version:
        description: 'TiDB Version (e.g., v7.5.2)'
        required: true
        default: 'v7.5.2'
      playground_version:
        description: 'Playground Version (e.g., v1.16.2)'
        required: true
        default: 'v1.16.2'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine versions
      id: versions
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "tidb_version=${{ github.event.inputs.tidb_version }}" >> $GITHUB_OUTPUT
          echo "playground_version=${{ github.event.inputs.playground_version }}" >> $GITHUB_OUTPUT
        else
          # Extract from Dockerfile default ARGs if not manually triggered
          # This is a fallback, ideally versions are managed via tags or release process
          tidb_version_from_dockerfile=$(grep -oP 'ARG TIDB_VERSION=\K[^ ]+' Dockerfile)
          playground_version_from_dockerfile=$(grep -oP 'ARG PLAYGROUND_VERSION=\K[^ ]+' Dockerfile)
          echo "tidb_version=${tidb_version_from_dockerfile:-v7.5.2}" >> $GITHUB_OUTPUT
          echo "playground_version=${playground_version_from_dockerfile:-v1.16.2}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/tiup-tidb-${{ steps.versions.outputs.tidb_version }}:${{ steps.versions.outputs.playground_version }}
        build-args: |
          TIDB_VERSION=${{ steps.versions.outputs.tidb_version }}
          PLAYGROUND_VERSION=${{ steps.versions.outputs.playground_version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
